import*as THREE from"three";import Stats from"three/addons/libs/stats.module.js";import{createRandomColor,getDom}from"./public/libs/utils.js";import{createFPSController}from"./public/magic/controllers.js";import{MagicPhysics}from"./public/magic/physics.js";import{updateControls}from"./public/magic/updater.js";import config from"./config.js";import{MagicMaterials}from"./public/magic/materials.js";import{MagicLoader}from"./public/magic/loaders.js";import{runCache}from"./public/magic/utility.js";class Application extends MagicPhysics{container=getDom("container");stats=null;camera=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,.2,2e3);scene=new THREE.Scene;renderer=new THREE.WebGLRenderer;materials=new MagicMaterials;controls=null;textureLoader=null;clock=new THREE.Clock;mouseCoords=new THREE.Vector2;raycaster=new THREE.Raycaster;ballMaterial=new THREE.MeshPhongMaterial({color:2105376});moveForward=!1;moveBackward=!1;moveLeft=!1;moveRight=!1;canJump=!1;prevTime=performance.now();velocity=new THREE.Vector3;direction=new THREE.Vector3;vertex=new THREE.Vector3;color=new THREE.Color;playerBody;config;constructor(e){super({config:e}),this.config=e,this.loader=new MagicLoader(this.scene);for(let e=0;e<500;e++)this.objectsToRemove[e]=null;console.info("MagicThree: Worker test."),runCache(this.config.cache),setTimeout((()=>{this.loader.fbx("./assets/objects/zombies/zombie-walk.fbx")}),5e3),this.updateControls=updateControls.bind(this),Ammo().then((e=>{Ammo=e,this.ammoTmpPos=new Ammo.btVector3,this.ammoTmpQuat=new Ammo.btQuaternion,this.tmpTrans=new Ammo.btTransform,this.init(),this.animate(),console.log("Ammo is ready.")}))}init(){this.createFPSController=createFPSController.bind(this),this.initGraphics(),this.initPhysics(),this.createObjects(),this.initInput(),this.createPlayer()}initGraphics(){console.log("this.config.map.background",this.config.map.background),this.scene.background=new THREE.Color(this.config.map.background),this.camera.position.set(this.config.playerController.cameraInitPosition.x,this.config.playerController.cameraInitPosition.y,this.config.playerController.cameraInitPosition.z),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.shadowMap.enabled=!0,this.container.appendChild(this.renderer.domElement),"FPS"===this.config.playerController.type?this.createFPSController():(this.controls=new OrbitControls(this.camera,this.renderer.domElement),this.controls.target.set(0,2,0),this.controls.update()),this.textureLoader=new THREE.TextureLoader,this.ambientLight=new THREE.AmbientLight(7368816),this.scene.add(this.ambientLight),this.light=new THREE.DirectionalLight(16777215,1),this.light.position.set(-10,18,5),this.light.castShadow=!0;this.light.shadow.camera.left=-14,this.light.shadow.camera.right=14,this.light.shadow.camera.top=14,this.light.shadow.camera.bottom=-14,this.light.shadow.camera.near=2,this.light.shadow.camera.far=50,this.light.shadow.mapSize.x=1024,this.light.shadow.mapSize.y=1024,this.scene.add(this.light),this.stats=new Stats,this.stats.domElement.style.position="absolute",this.stats.domElement.style.top="0px",this.container.appendChild(this.stats.domElement),window.addEventListener("resize",this.onWindowResize)}createBreakableBox(e,t,i,s,o){const r=new THREE.Mesh(new THREE.BoxGeometry(2*t.x,2*t.y,2*t.z),o);r.position.copy(i),r.quaternion.copy(s),this.convexBreaker.prepareBreakableObject(r,e,new THREE.Vector3,new THREE.Vector3,!0),this.createDebrisFromBreakableObject(r)}createPlayer(){const e=new THREE.LineBasicMaterial({color:255}),t=new THREE.Line(new THREE.SphereGeometry(2,14,10),e);t.castShadow=!0,t.receiveShadow=!0;const i=new Ammo.btSphereShape(2);i.setMargin(this.margin),this.pos.copy(this.raycaster.ray.direction),this.pos.add(this.raycaster.ray.origin),this.quat.set(0,0,0,1),this.playerBody=t;const s=this.createRigidBody(t,i,35,this.pos,this.quat);console.log("PlayerBody created. ",this.playerBody),s.setCollisionFlags(0)}createObjects(){this.pos.set(0,-.5,0),this.quat.set(0,0,0,1);const e=this.createParalellepipedWithPhysics(this.config.map.floorWidth,1,this.config.map.floorHeight,0,this.pos,this.quat,this.materials.assets.Orange_glass);e.receiveShadow=!0,this.textureLoader.load("./assets/textures/cube/wall-black.webp",(function(t){t.wrapS=THREE.RepeatWrapping,t.wrapT=THREE.RepeatWrapping,t.repeat.set(40,40),e.material.map=t,e.material.needsUpdate=!0})),e.name="ground";const t=new THREE.Vector3(5,5,.3);this.pos.set(-8,5,0),this.quat.set(0,0,0,1),this.createBreakableBox(1e3,t,this.pos,this.quat,App.materials.assets.Yellow_glass),this.pos.set(8,5,0),this.quat.set(0,0,0,1),this.createSimpleBox(1e3,t,this.pos,this.quat,App.materials.assets.Bronze),this.pos.set(18,5,0),this.quat.set(0,0,0,1),this.createCilinder(1e4,[5,5,20,32],this.pos,this.quat,App.materials.assets.Bronze),this.pos.set(-18,5,0),this.quat.set(0,0,0,1),this.createTorus(1e4,[10,3,16,100],this.pos,this.quat,App.materials.assets.Bronze)}createMaterial(e){return e=e||createRandomColor(),new THREE.MeshPhongMaterial({color:e})}initInput(){window.addEventListener("pointerdown",(e=>{this.mouseCoords.set(e.clientX/window.innerWidth*2-1,-e.clientY/window.innerHeight*2+1),this.raycaster.setFromCamera(this.mouseCoords,this.camera);const t=new THREE.Mesh(new THREE.SphereGeometry(.2,14,10),this.ballMaterial);t.castShadow=!0,t.receiveShadow=!0;const i=new Ammo.btSphereShape(.2);i.setMargin(this.margin),this.pos.copy(this.raycaster.ray.direction),this.pos.add(this.raycaster.ray.origin),this.quat.set(0,0,0,1);const s=this.createRigidBody(t,i,35,this.pos,this.quat);this.pos.copy(this.raycaster.ray.direction),this.pos.multiplyScalar(48),s.setLinearVelocity(new Ammo.btVector3(this.pos.x,this.pos.y,this.pos.z))}))}onWindowResize=()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)};animate=()=>{requestAnimationFrame(this.animate),this.render(),this.stats.update()};render(){const e=this.clock.getDelta();this.updatePhysics(e),this.updateControls(),"velocity"===this.config.playerController.movementType?this.moveVelocity():this.moveKinematic(),this.loader.mixer&&this.loader.mixer.update(e),this.raycaster.setFromCamera(this.mouseCoords,this.camera);const t=this.raycaster.intersectObjects(this.scene.children);for(let e=0;e<t.length;e++);this.renderer.render(this.scene,this.camera)}}let App=new Application(config);window.App=App;
